syntax = "proto3";

package aura.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/noble-assets/aura/x/aura/types";

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc Burn(aura.v1.MsgBurn) returns (aura.v1.MsgBurnResponse);
  rpc Mint(aura.v1.MsgMint) returns (aura.v1.MsgMintResponse);

  rpc Pause(aura.v1.MsgPause) returns (aura.v1.MsgPauseResponse);
  rpc Unpause(aura.v1.MsgUnpause) returns (aura.v1.MsgUnpauseResponse);
}

//

message MsgBurn {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "aura/Burn";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string from = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgBurnResponse {}

message MsgMint {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "aura/Mint";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string to = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string amount = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgMintResponse {}

message MsgPause {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "aura/Pause";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgPauseResponse {}

message MsgUnpause {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "aura/Unpause";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgUnpauseResponse {}
